#include <iostream>

using namespace std;

template <class type>
class part
{
public:
	part();
	~part();
	void set_element(type new_element);
	void set_next(part *new_next);
	type get_element();
	part *get_next();
private:
	type element;
	part *next;
};


template <class type>
class list
{
public:
	list();
	~list();
private:
};


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <class type>
part<type>::part()
{
	this->next = NULL;
}

template <class type>
part<type>::~part()
{

}

template <class type>
void part<type>::set_element(type new_element)
{
	this->element = new_element;
}

template <class type>
void part<type>::set_next(part *new_next)
{
	this->next = new_next;
}

template <class type>
type part<type>::get_element()
{
	return this->element;
}

template <class type>
part<type> *part<type>::get_next()
{
	return this->next;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <class type>
list<type>::list() 
{

}

template <class type>
list<type>::~list()
{

}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

